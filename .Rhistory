fit3 <- lm(mpg~cyl+wt+transmission,data=mtcars)
summary(fit3)
anova(fit3)
fit3 <- lm(mpg~cyl+wt+transmission,data=mtcars)
summary(fit3)
fit <- lm(mpg~transmission, data=mtcars)
summary(fit)
tapply(mtcars$mpg, mtcars$transmission, mean)
sumCoef <- summary(fit)$coefficients
ci0 <- sumCoef[1,1] + c(-1,1) * qt(.975, df = fit$df) * sumCoef[1,2]
ci1 <- sumCoef[2,1] + c(-1,1) * qt(.975, df = fit$df) * sumCoef[2,2]
plot(fit, which=1)
plot(fit, which=2)
plot(fit, which=3)
plot(fit, which=4)
plot(fit, which=5)
plot(fit, which=1)
?dfbeta
influence(fit)
dfbeta(fit)
plot(fit, which=1)
plot(fit3, which=1)
plot(fit3, which=2)
plot(fit3, which=3)
plot(fit3, which=1)
plot(fit3, which=3)
plot(fit3, which=4)
plot(fit3, which=5)
plot(fit3, which=6)
plot(fit3, which=1)
?mtcars
sumCoef[1]
sumCoef[1] + sumCoef [2]
sumCoef[2]
tapply(mtcars$mpg, mtcars$transmission, mean)
sumCoef[1] + ci0
ci0
sumCoef[1] + ci1
rbind(c("Transmission","Predicted mpg","95% Confidence Intervals"),
c("Automatic", sumCoef[0], ci0),
c("Manual", sumCoef[0]+sumCoef[1], sumCoef[1] + ci1 ))
rbind(c("Transmission","Predicted mpg","95% Confidence Intervals", ""),
c("Automatic", sumCoef[0], ci0),
c("Manual", sumCoef[0]+sumCoef[1], sumCoef[1] + ci1 ))
rbind(c("Transmission","Predicted mpg","95% Confidence Intervals", ""),
c("Automatic", sumCoef[0], ci0[1], ci0[2]),
c("Manual", sumCoef[0]+sumCoef[1], sumCoef[1] + ci1[1], sumCoef[1] + ci1[2]))
c("Automatic", sumCoef[0], ci0[1], ci0[2])
sumCoef[0]
c("Automatic", sumCoef[1], ci0[1], ci0[2])
summary(fit)$coefficients
round(summary(fit)$coefficients,3)
sumCoef <- round(summary(fit)$coefficients,3)
ci0 <- sumCoef[1,1] + c(-1,1) * qt(.975, df = fit$df) * sumCoef[1,2]
ci1 <- sumCoef[2,1] + c(-1,1) * qt(.975, df = fit$df) * sumCoef[2,2]
c("Automatic", sumCoef[1], ci0[1], ci0[2])
ci0 <- round(sumCoef[1,1] + c(-1,1) * qt(.975, df = fit$df) * sumCoef[1,2], 3)
ci1 <- round(sumCoef[2,1] + c(-1,1) * qt(.975, df = fit$df) * sumCoef[2,2], 3)
c("Automatic", sumCoef[1], ci0[1], ci0[2])
c("Manual", sumCoef[2]+sumCoef[1], sumCoef[1] + ci1[1], sumCoef[1] + ci1[2])
rbind(c("Transmission","Predicted mpg","95% Confidence Intervals", ""),
c("Automatic", sumCoef[1], ci0[1], ci0[2]),
c("Manual", sumCoef[2]+sumCoef[1], sumCoef[1] + ci1[1], sumCoef[1] + ci1[2]))
rbind(c("Transmission","Predicted mpg","95% CI Lower", "95% CI Upper"),
c("Automatic", sumCoef[1], ci0[1], ci0[2]),
c("Manual", sumCoef[2]+sumCoef[1], sumCoef[1] + ci1[1], sumCoef[1] + ci1[2]))
plot(fit3, which=1)
g <- ggplot(data=mtcars, aes(transmission, mpg, fill=transmission)) + geom_point() + geom_boxplot()
g <- g + labs(title = "Figure 1 - Boxplot of fuel efficiency by transmission type", y="Efficiency (mpg)", x="Transmission type")
g + panel.margin(0)
g + theme(panel.margin=0)
g + theme(panel.margin=unit(0))
g + theme(panel.margin=unit(0, "lines"))
library(grid)
g + theme(panel.margin=unit(0))
g + theme(panel.margin=unit(0,"lines"))
g + theme(panel.margin=unit(1,"lines"))
g + theme(panel.margin=unit(10,"lines"))
g + theme(panel.margin=unit(10,"cm"))
g + theme(panel.margin=unit(100,"cm"))
g + theme(plot.margin=unit(100,"cm"))
g + theme(plot.margin=unit(1,"cm"))
g + theme(plot.margin=unit(1,"lines"))
g + theme(panel.margin=unit(1,"lines"))
lm(mpg ~ disp + wt + am, data=mtcars)
summary(lm(mpg ~ disp + wt + am, data=mtcars))
summary(lm(mpg ~ cyl + wt + am, data=mtcars))
plot(cor(mtcars))
ggpairs(mtcars)
install.packages("GGally")
install.packages("GGally")
library(caret)
library(GGally)
library(ggplot2)
library(grid)
(library(GGally)
)
library(GGally)
ggpairs(mtcars)
featurePlot(x=mtcars,y=mtcars$mpg,plot="pairs")
library(caret)
featurePlot(x=mtcars,y=mtcars$mpg,plot="pairs")
pairs(data=mtcars)
pairs(mtcars, data=mtcars)
pairs(mtcars, lower.panel=panel.smooth, upper.panel=panel.cor, data=mtcars)
plotmatrix(mtcars)
library(ggplot2)
plotmatrix(mtcars)
pairs(mtcars, lower.panel=panel.smooth, data=mtcars)
featurePlot(x=mtcars,y=mtcars$mpg,plot="pairs")
summary(lm(mpg~hp+am,data=mtcars))
summary(lm(mpg~hp+am+wt+cyl,data=mtcars))
anova(lm(mpg~hp+am+wt+cyl,data=mtcars))
anova(lm(mpg~hp+am+wt+disp,data=mtcars))
anova(lm(mpg~hp+am+wt+cyl,data=mtcars))
summary(lm(mpg~hp+am+wt+cyl,data=mtcars))
summary(lm(mpg~hp+am+wt,data=mtcars))
summary(lm(mpg~hp+am,data=mtcars))
summary(lm(mpg~I(hp-mean(hp))+am,data=mtcars))
summary(lm(mpg~I(hp-mean(hp))+am-1,data=mtcars))
anova(summary(lm(mpg~I(hp-mean(hp))+am-1,data=mtcars)))
anova(lm(mpg~I(hp-mean(hp))+am-1,data=mtcars))
anova(lm(mpg~I(hp-mean(hp))+transmission-1,data=mtcars))
summary(lm(mpg~I(hp-mean(hp))+transmission-1,data=mtcars))
fit4 <- lm(mpg ~ wt + cyl + transmission-1, data=mtcars)
fit4
summary(fit4)
fit4 <- lm(mpg ~ transmission-1, data=mtcars)
summary(fit3)
summary(fit4)
fit4 <- lm(mpg ~ wt + cyl + transmission-1, data=mtcars)
summary(fit4)
anova(fit4)
fit4 <- lm(mpg ~ wt -1, data=mtcars)
summary(fit4)
fit4 <- lm(mpg ~ wt + cyl -1, data=mtcars)
summary(fit4)
fit4 <- lm(mpg ~ wt + cyl +am -1, data=mtcars)
summary(fit4)
fit4 <- lm(mpg ~ am -1, data=mtcars)
summary(fit4)
fit4 <- lm(mpg ~ transmission -1, data=mtcars)
summary(fit4)
plot(fit4, which=1)
plot(fit4, which=2)
plot(fit4, which=3)
lm(mpg~wt*transmission, data=mtcars)
summary(lm(mpg~wt*transmission, data=mtcars))
summary(lm(mpg~wt*am, data=mtcars))
summary(lm(mpg~wt*transmission, data=mtcars))
summary(lm(mpg~cyl*transmission, data=mtcars))
summary(lm(mpg~cyl*transmission+cyl, data=mtcars))
summary(lm(mpg~wt*transmission+cyl, data=mtcars))
fit5 <- lm(mpg~wt*transmission+cyl, data=mtcars)
fit5
plot(fit5, which=1)
plot(fit5)
ggplot(data=mtcars, aes(mpg,wt,colour=transmission)) + geom_smooth(method="lm")
ggplot(data=mtcars, aes(mpg,wt,colour=transmission)) + geom_smooth(method="lm") +geom_point()
fit5 <- lm(mpg~wt*transmission+cyl, data=mtcars)
fit6 <- lm(mpg~wt*transmission, data=mtcars)
summary(fit5)
summary(fit6)
fit7 <- lm(mpg~wt*transmission+cyl*transmission, data=mtcars)
summary(fit7)
anova(fit5)
anova(lm(mpg~wt+cyl,data=mtcars))
anova(lm(mpg~wt+cyl-1,data=mtcars))
anova(lm(mpg~wt+cyl+transmission-1,data=mtcars))
anova(lm(mpg~wt*transmission-1,data=mtcars))
summary(lm(mpg~wt*transmission-1,data=mtcars))
ggplot(data=mtcars, aes(wt,mpg,colour=transmission)) + geom_smooth(method="lm") +geom_point()
summary(lm(mpg~wt+transmission,data=mtcars))
summary(lm(mpg~wt*transmission,data=mtcars))
summary(lm(mpg~wt*transmission+cyl,data=mtcars))
summary(lm(mpg~wt*transmission+cyl-1,data=mtcars))
lm(mpg~wt+transmission,data=mtcars)
summary(lm(mpg~wt+transmission,data=mtcars))
summary(lm(mpg~wt*transmission,data=mtcars))
summary(lm(mpg~wt*transmission+qsec,data=mtcars))
summary(lm(mpg~wt+transmission+qsec,data=mtcars))
summary(lm(mpg~wt+transmission+cyl,data=mtcars))
summary(lm(mpg~wt+transmission+qsec,data=mtcars))
summary(lm(mpg~wt+I(hp/wt),data=mtcars))
fit6 <- glm(mpg~.,data=mtcars)
summary(fit6)
?step
step(fit6)
step(fit6, trace=0)
setwd("~/Documents/Coursera/macl")
exists("weight_train.csv")
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv","weight_train.csv")
exists("weight_train.csv")
if(!exists("weight_train.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv","weight_train.csv")
}
!exists("weight_train.csv")
exists("weight_train.csv")
exists(".\weight_train.csv")
exists("./weight_train.csv")
file.exists("weight_train.csv")
!file.exists("weight_train.csv")
if(!file.exists("weight_train.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv","weight_train.csv")
}
if(!file.exists("weight_test.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv","weight_train.csv")
}
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv","weight_train.csv")
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv","weight_test.csv")
rm(list=ls())
wt_train <- read.csv("weight_train.csv")
wt_test <- read.csv("weight_test.csv")
View(wt_test)
View(wt_train)
is.na(wt_test$kurtosis_roll_belt)
count(is.na(wt_test$kurtosis_roll_belt))
?count
sum(is.na(wt_test$kurtosis_roll_belt))
sum(is.na(wt_test$skewness_roll_belt.1))
sum(is.na(wt_train$kurtosis_roll_belt))
?read.csv
str(wt_train$kurtosis_roll_dumbbell)
wt_train <- read.csv("weight_train.csv",stringsAsFactors=FALSE)
View(wt_train)
str(wt_train$kurtosis_roll_dumbbell)
wt_train <- read.csv("weight_train.csv",stringsAsFactors=FALSE,na.strings="")
View(wt_train)
sum(is.na(wt_train$kurtosis_roll_belt))
lapply(wt_train, function(x) {sum(is.na(x))})
table(lapply(wt_train, function(x) {sum(is.na(x))}))
na.fields <- lapply(wt_train, function(x) {sum(is.na(x))})
na.fields
na.fields[na.fields>0]
na.fields <- lapply(wt_train, function(x) {sum(is.na(x))})>0
na.fields <- lapply(wt_train, function(x) {sum(is.na(x))})
rm.na <- wt_train[na.fields<0]
na.fields<0
na.fields=0
na.fields <- lapply(wt_train, function(x) {sum(is.na(x))})
na.fields==0
rm.na <- wt_train[na.fields==0]
count(na.fields>0)
sum(na.fields>0)
View(rm.na)
str(max_roll_belt)
str(wt_train$max_roll_belt)
str(wt_train$max_yaw_belt)
wt_train <- read.csv("weight_train.csv",stringsAsFactors=FALSE,na.strings=c("","NA"))
View(wt_train)
na.fields <- lapply(wt_train, function(x) {sum(is.na(x))})
rm.na <- wt_train[na.fields==0]
rm(wt_train)
View(rm.na)
str(rm.na)
as.time(1323084231)
as.POSIXct(1323084231)
as.POSIXlt(1323084231)
is.numeric.POSIXt(1323084231)
strptime("05/12/2011 11:23")
strptime("05/12/2011 11:23", "%dd/%mm/%YYYY HH:MM")
?strptime
strptime("05/12/2011 11:23","%d/%m/%Y %H:%M")
rm.na$classe <- as.factor(rm.na$classe)
str(rm.na$classe)
rm.na$user_name <- as.factor(rm.na$user_name)
str(rm.na)
wt_test <- read.csv("weight_test.csv",na.strings=c("","NA"))
str(wt_test)
wt_train <- read.csv("weight_train.csv",na.strings=c("","NA"))
na.fields <- lapply(wt_train, function(x) {sum(is.na(x))})
rm.na <- wt_train[na.fields==0]
str(rm.na)
rm(wt_train)
strptime(rm.na$cvtd_timestamp,"%d/%m/%Y %H:%M")
rm.na$cvtd_timestamp <- strptime(rm.na$cvtd_timestamp,"%d/%m/%Y %H:%M")
str(rm.na)
names <- names(rm.na)
names
strsplit(names, "_")
strsplit(names, "_")[2]
strsplit(names, "_")[[]][2]
strsplit(names, "_")[,][2]
strsplit(names, "_")[][2]
strsplit(names, "_")[]
strsplit(names, "_")[[2]]
strsplit(names, "_")[][]
strsplit(names, "_")[][2]
sapply(names, function(x) {strsplit(x,"_")[2]})
sapply(names, function(x) {strsplit(x,"_")})
sapply(names, function(x) {strsplit(x,"_")[[1]]})
sapply(names, function(x) {strsplit(x,"_")[[1]][2]})
rm(names)
labels <- sapply(names(rm.na), function(x) {strsplit(x,"_")[[1]][2]})
table(labels)
library(dplyr)
?filter
?select
str(rm.na)
tidy <- select(rm.na, -c(1,3:7))
View(tidy)
labels <- sapply(names(tidy), function(x) {strsplit(x,"_")[[1]][2]})
table(labels)
labels
rm(list=c(wt_train,rm.na))
wt_train <- read.csv("weight_train.csv",na.strings=c("","NA"))
rm(list=c(wt_train,rm.na))
rm(list=(wt_train,rm.na))
rm(list=list(wt_train,rm.na))
?rm
rm(list=c("wt_train","rm.na"))
library(caret)
str(tidy)
inTrain = createDataPartition(tidy$classe, p=0.6, list=FALSE)
rm(inTrain)
part <- createDataPartition(tidy$classe, p=0.6, list=FALSE)
train <- tidy[part,]
test <- tidy[-part,]
rm(list=c("wt_train","rm.na","tidy","labels","part"))
View(train)
boxplot(test$roll_belt~test$classe)
boxplot(test$pitch_belt~test$classe)
boxplot(test$yaw_belt~test$classe)
boxplot(test$total_accel_belt~test$classe)
boxplot(test$total_accel_arm~test$classe)
boxplot(test$total_accel_dumbbell~test$classe)
boxplot(test$total_accel_forearm~test$classe)
boxplot(test$gyros_belt_x~test$classe)
boxplot(test$gyros_belt_y~test$classe)
boxplot(test$gyros_belt_z~test$classe)
cor(test)
featurePlot(x=train,y=train$classe,plot="pairs")
View(wt_test)
range(wt_test$raw_timestamp_part_2)
hist(wt_test$raw_timestamp_part_2)
wt_train <- read.csv("weight_train.csv",na.strings=c("","NA"))
View(wt_train)
modelFit <- train(train$classe~.,method="rf",data=train)
install.packages("parallel","doParallel")
install.packages("parallel","doParallel")
library(parallel)
library(doParallel)
install.packages(doParallel")
install.packages("doParallel")
library(doParallel)
rm(list=ls())
wt_train <- read.csv("weight_train.csv",na.strings=c("","NA"))
wt_test <- read.csv("weight_test.csv",na.strings=c("","NA"))
na.fields <- lapply(wt_train, function(x) {sum(is.na(x))})
rm.na <- wt_train[na.fields==0]
tidy <- select(rm.na, -c(1:7))
library(dplyr)
library(caret)
library(ggplot2)
tidy <- select(rm.na, -c(1:7))
View(tidy)
cor(as.numeric(tidy))
cor(tidy)
str(tidy)
as.matrix(tidy)
cor(as.matrix(tidy))
str(as.matrix(tidy))
?as.matrix
tapply(tidy$roll_belt, tidy$classe, mean)
tapply(tidy$roll_belt, tidy$classe, var)
range(tapply(tidy$roll_belt, tidy$classe, var))
sapply(tidy, function(x){
range(tapply(x, tidy$classe, var))
})
sapply(tidy, function(x){
range(tapply(x, tidy$classe, mean))
})
boxplot(tidy$yaw_forearm~tidy$classe)
var(tidy$yaw_forearm)
mean(tidy$yaw_forearm)
range(tidy$yaw_forearm)
sd(tidy$yaw_forearm)
tapply(tidy$yaw_forearm. tidy$classe, mean)
tapply(tidy$yaw_forearm, tidy$classe, mean)
temp <- tapply(tidy$yaw_forearm, tidy$classe, mean)
x<-tidy$yaw_forearm
temp <- tapply(x, tidy$classe, mean)
(max(temp) - min(temp))/var(x)
(max(temp) - min(temp))/sd(x)
tapply(tidy$total_accel_forearm, tidy$classe, mean)
x <- tidy$total_accel_forearm
temp <- tapply(x, tidy$classe, mean)
(max(temp) - min(temp))/sd(x)
sd(x)
boxplot(tidy$total_accel_forearm)
boxplot(tidy$total_accel_forearm~tidy$classe)
sapply(tidy, function(x){
temp <- tapply(x, tidy$classe, mean)
(max(temp) - min(temp))/sd(x)
})
boxplot(tidy$pitch_forearm~tidy$classe)
sd(tidy$pitch_forearm[tidy$classe=="A"])
sd(tidy$pitch_forearm[tidy$classe=="B"])
sd(tidy$pitch_forearm[tidy$classe=="C"])
sd(tidy$pitch_forearm[tidy$classe=="A"])
mean(tidy$pitch_forearm[tidy$classe=="A"])
x <- tidy$pitch_forearm
temp <- tapply(x, tidy$classe, mean)
temp
max(temp) - min(temp)
(max(temp) - min(temp))/sd(x)
sd(x)
x <-  gyros_belt_y
x <- tidy$gyros_belt_y
temp <- tapply(x, tidy$classe, mean)
temp
boxplot(tidy$gyros_belt_y~tidy$classe)
sd(x)
sd(x[tidy$classe=="A"])
sd(x[tidy$classe=="E"])
(max(temp) - min(temp))/sd(x)
(max(temp) - min(temp))/sd(x[tidy$classe=="A"])
vars <- sapply(tidy, function(x){
temp <- tapply(x, tidy$classe, mean)
(max(temp) - min(temp))/sd(x)
})
vars
vars>0.5
better <- tidy(vars>0.5)
better <- tidy[vars>0.5]
better <- tidy[,vars>0.5]
better <- subset(tidy[,vars>0.5])
?subset
better <- subset(tidy,vars>0.5)
rm(better)
better <- names(tidy)[vars>0.5]
better
better <- names(tidy)[vars>0.5][-1]
better
better <- names(tidy)[vars>0.5]
better <- names(tidy)[vars>0.5 & vars==NA]
better
better <- names(tidy)[vars>0.5 & vars!=NA]
better
better <- names(tidy)[vars>0.5 && vars!=NA]
better
better <- names(tidy)[vars>0.5]
better
boxplot(tidy$magnet_belt_y~tidy$classe)
plot(tidy$magnet_belt_y,tidy$classe)
plot(tidy$classe,tidy$magnet_belt_y)
ggplot(data=tidy,aes(magnet_belt_y,classe))
ggplot(data=tidy,aes(magnet_belt_y,classe)) +geom_point()
ggplot(data=tidy,aes(classe,magnet_belt_y)) +geom_point()
ggplot(data=tidy,aes(classe,magnet_belt_y)) +geom_point() +geom_smooth()
ggplot(data=tidy,aes(classe,magnet_belt_y)) +geom_point() +geom_smooth(method="loess")
ggplot(data=tidy,aes(classe,magnet_belt_y,colour="classe")) +geom_point()
ggplot(data=tidy,aes(classe,magnet_belt_y,colour=classe)) +geom_point()
rm(list=ls())
wt_train <- read.csv("weight_train.csv",na.strings=c("","NA"))
wt_test <- read.csv("weight_test.csv",na.strings=c("","NA"))
na.fields <- lapply(wt_train, function(x) {sum(is.na(x))})
rm.na <- wt_train[na.fields==0]
tidy <- select(rm.na, -c(1:7))
labels <- sapply(names(tidy), function(x) {strsplit(x,"_")[[1]][2]})
table(labels) #roll, pitch, yaw, accel(xyz), magnet(xyz), gyros(xyz), totel_accel = 13 * 4 (arm, forearm, belt, dumbbell)
set.seed(32323)
part <- createDataPartition(tidy$classe, p=0.6, list=FALSE)
train <- tidy[part,]
heldout <- tidy[-part,]
part2 <- createDataPartition(heldout$classe, p=0.5, list=FALSE)
cv <- heldout[part2,]
test <- heldout[-part2,]
rm(list=c("wt_train","rm.na","tidy","labels","part","part2","heldout"))
train[,-classe]
train[,-53]
vars <- sapply(train[,-53], function(x){
temp <- tapply(x, train$classe, mean)
(max(temp) - min(temp))/sd(x)
})
vars
clusters <- makeCluster(detectCores())
detectCores()
registerDoParallel(clusters)
tr_params <- trainControl(method="cv",number=10,allowParallel = TRUE)
modelFit <- train(train$classe~.,method="rf",data=train,trControl=tr_params)
stopCluster(clusters)
results <- predict(modelFit, newdata=cv)
confusionMatrix(cv$classe, results)
scaled <- scale(train)
str(train)
scaled <- scale(train[,-53])
View(scaled)
cor(scaled)
hist(cor(scaled))
pca <- svd(scaled)
d^2/sum(d^2)
pca$d^2/sum(pca$d^2)
plot(pca$d^2/sum(pca$d^2))
cumsum(pca$d^2/sum(pca$d^2))
plot(pca$d^2/sum(pca$d^2)[1:12])
plot(pca$d^2/sum(pca$d^2))
plot(pca$u[1])
plot(pca$u[,1])
plot(pca$u[,1], col=train$classe)
plot(pca$u[,2], col=train$classe)
plot(pca$u[,3], col=train$classe)
plot(pca$u[,4], col=train$classe)
plot(pca$u[,5], col=train$classe)
boxplot(pca$u[,1]~train$classe)
boxplot(pca$u[,2]~train$classe)
boxplot(pca$u[,3]~train$classe)
boxplot(pca$u[,4]~train$classe)
boxplot(pca$u[,5]~train$classe)
boxplot(pca$u[,6]~train$classe)
results2 <- predict(modelFit, newdata=wt_test)
results2
